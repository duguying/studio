// Code generated by protoc-gen-go. DO NOT EDIT.
// source: authorize_key.proto

package model

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AuthorizeKey_KeyCmd int32

const (
	AuthorizeKey_LIST   AuthorizeKey_KeyCmd = 0
	AuthorizeKey_SET    AuthorizeKey_KeyCmd = 1
	AuthorizeKey_DELETE AuthorizeKey_KeyCmd = 2
)

var AuthorizeKey_KeyCmd_name = map[int32]string{
	0: "LIST",
	1: "SET",
	2: "DELETE",
}
var AuthorizeKey_KeyCmd_value = map[string]int32{
	"LIST":   0,
	"SET":    1,
	"DELETE": 2,
}

func (x AuthorizeKey_KeyCmd) String() string {
	return proto.EnumName(AuthorizeKey_KeyCmd_name, int32(x))
}
func (AuthorizeKey_KeyCmd) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_authorize_key_9192526cb06110b9, []int{0, 0}
}

// cmd 2
type AuthorizeKey struct {
	Command              AuthorizeKey_KeyCmd `protobuf:"varint,1,opt,name=command,proto3,enum=model.AuthorizeKey_KeyCmd" json:"command,omitempty"`
	PublicKeys           []string            `protobuf:"bytes,2,rep,name=public_keys,json=publicKeys,proto3" json:"public_keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *AuthorizeKey) Reset()         { *m = AuthorizeKey{} }
func (m *AuthorizeKey) String() string { return proto.CompactTextString(m) }
func (*AuthorizeKey) ProtoMessage()    {}
func (*AuthorizeKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_authorize_key_9192526cb06110b9, []int{0}
}
func (m *AuthorizeKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthorizeKey.Unmarshal(m, b)
}
func (m *AuthorizeKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthorizeKey.Marshal(b, m, deterministic)
}
func (dst *AuthorizeKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthorizeKey.Merge(dst, src)
}
func (m *AuthorizeKey) XXX_Size() int {
	return xxx_messageInfo_AuthorizeKey.Size(m)
}
func (m *AuthorizeKey) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthorizeKey.DiscardUnknown(m)
}

var xxx_messageInfo_AuthorizeKey proto.InternalMessageInfo

func (m *AuthorizeKey) GetCommand() AuthorizeKey_KeyCmd {
	if m != nil {
		return m.Command
	}
	return AuthorizeKey_LIST
}

func (m *AuthorizeKey) GetPublicKeys() []string {
	if m != nil {
		return m.PublicKeys
	}
	return nil
}

func init() {
	proto.RegisterType((*AuthorizeKey)(nil), "model.AuthorizeKey")
	proto.RegisterEnum("model.AuthorizeKey_KeyCmd", AuthorizeKey_KeyCmd_name, AuthorizeKey_KeyCmd_value)
}

func init() { proto.RegisterFile("authorize_key.proto", fileDescriptor_authorize_key_9192526cb06110b9) }

var fileDescriptor_authorize_key_9192526cb06110b9 = []byte{
	// 167 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4e, 0x2c, 0x2d, 0xc9,
	0xc8, 0x2f, 0xca, 0xac, 0x4a, 0x8d, 0xcf, 0x4e, 0xad, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17,
	0x62, 0xcd, 0xcd, 0x4f, 0x49, 0xcd, 0x51, 0xea, 0x63, 0xe4, 0xe2, 0x71, 0x84, 0x49, 0x7b, 0xa7,
	0x56, 0x0a, 0x99, 0x70, 0xb1, 0x27, 0xe7, 0xe7, 0xe6, 0x26, 0xe6, 0xa5, 0x48, 0x30, 0x2a, 0x30,
	0x6a, 0xf0, 0x19, 0x49, 0xe9, 0x81, 0x55, 0xea, 0x21, 0xab, 0xd2, 0xf3, 0x4e, 0xad, 0x74, 0xce,
	0x4d, 0x09, 0x82, 0x29, 0x15, 0x92, 0xe7, 0xe2, 0x2e, 0x28, 0x4d, 0xca, 0xc9, 0x4c, 0x06, 0xd9,
	0x50, 0x2c, 0xc1, 0xa4, 0xc0, 0xac, 0xc1, 0x19, 0xc4, 0x05, 0x11, 0xf2, 0x4e, 0xad, 0x2c, 0x56,
	0x52, 0xe7, 0x62, 0x83, 0xe8, 0x11, 0xe2, 0xe0, 0x62, 0xf1, 0xf1, 0x0c, 0x0e, 0x11, 0x60, 0x10,
	0x62, 0xe7, 0x62, 0x0e, 0x76, 0x0d, 0x11, 0x60, 0x14, 0xe2, 0xe2, 0x62, 0x73, 0x71, 0xf5, 0x71,
	0x0d, 0x71, 0x15, 0x60, 0x4a, 0x62, 0x03, 0x3b, 0xcf, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x8d,
	0xb2, 0x19, 0xe1, 0xb5, 0x00, 0x00, 0x00,
}
